<apex:component controller="ARTRequestManagementController" allowDml="true"> 
	<apex:attribute name="title" description="title" type="String" required="false" assignTo="{!titleParam}" default="Manage Priorities" />
	<apex:attribute name="developerIds" description="developerIds" type="String" required="false" assignTo="{!developerIdsParam}" />
	<apex:attribute name="initialStatuses" description="initial statuses" type="String" required="false" assignTo="{!initialStatusesParam}" />
	<apex:attribute name="initialProjectIds" description="initial projectIds" type="String" required="false" assignTo="{!initialProjectIdsParam}" default="" />
	<apex:attribute name="initialReleaseIds" description="initial releaseIds" type="String" required="false" assignTo="{!initialReleaseIdsParam}" default="" />
	<apex:attribute name="initialHiddenColumns" description="initial hidden columns" type="String" required="false" assignTo="{!initialHiddenColumnsParam}" default="" />
	<apex:attribute name="editModeAvailable" description="editModeAvailable" type="Boolean" required="false" assignTo="{!editModeAvailableParam}" default="false" />
	<apex:attribute name="allowStatusChange" description="allowStatusChange" type="Boolean" required="false" assignTo="{!allowStatusChangeParam}" default="false" />
	<apex:attribute name="allowReleaseChange" description="allowReleaseChange" type="Boolean" required="false" assignTo="{!allowReleaseChangeParam}" default="true" />
	<apex:attribute name="BlockedRequestsInitiallyVisible" description="includeBlockedRequests" type="Boolean" required="false" assignTo="{!includeBlockedRequestsParam}" default="false" />
	<apex:attribute name="NonBlockedRequestsInitiallyVisible" description="includeNonBlockedRequests" type="Boolean" required="false" assignTo="{!includeNonBlockedRequestsParam}" default="true" />
	<apex:attribute name="allowPriorityChange" description="allowPriorityChange" type="Boolean" required="false" assignTo="{!allowPriorityChangeParam}"	default="false" />
	<apex:attribute name="maxRows" description="maxRows" type="Integer" required="false" assignTo="{!maxRowsParam}" default="20" />

	<apex:includeScript value="{!URLFOR($Resource.jQuery1x,'jQuery/jquery-1.8.0.min.js')}" />
	<apex:includeScript value="{!URLFOR($Resource.jQuery1x,'jQuery/jquery-ui-1.8.20.custom.min.js')}" />
	<apex:includeScript value="{!URLFOR($Resource.jQuery1x,'jQueryPlugins/blockUI/jquery.blockUI.js')}" />
	<apex:includeScript value="{!URLFOR($Resource.jQuery1x,'jQueryPlugins/jqEasySlidePanel/js/jquery.slidePanel.js')}" />

	<script>
		if (!window.console) window.console = {};	 
		if (!window.console.log) window.console.log = function () {};
	</script>  
 
	<script language="javascript">
	    	var j$= jQuery.noConflict();
	    	j$.fn.exists = function(){return this.length>0;}
	    
	        j$(document).ready(function(){
	            applyJQueryStyling();
	            initializeSliderPopout();
	        });

	        function applyJQueryStyling() {
	         	j$.unblockUI();
	        	highlightRows();
	        	configHighlightRelatedFunctionality(); 
	        }

			function showBlockUIMessage(message) {
	        	j$.blockUI({ message: '<BR/><h1><img src="{!$Resource.spinner}" /> ' + message + '...</h1><BR/><BR/>'});
	        	//j$.blockUI({ message: '<BR/><h1><img src="{!URLFOR($Resource.AccountRollupResources, 'images/busy.gif')}" /> ' + message + '...</h1><BR/><BR/>'});
			}


			var lastHighlightRelatedSearchFor = '';
			/********************************
			 * Highlight Related Row Methods
			 ********************************/

			function configHighlightRelatedFunctionality() {
				j$('table.color_changing tr td').on('click', function(){
					var searchFor = j$(this).attr('data-content');
				
					if (searchFor != '' && searchFor != null) {
						if (searchFor != lastHighlightRelatedSearchFor) {
							clearHighlightedRelatedRows();
						
							highlightRowsWithDataContentEqualTo(searchFor);
							highlightRelatedRowAddHoverClass(j$(this).parent());
							lastHighlightRelatedSearchFor = searchFor;
						}
						else {
							clearHighlightedRelatedRows();
							highlightRelatedRowRemoveHoverClass(j$(this).parent());
							lastHighlightRelatedSearchFor = '';
						}
					}
				});
				
				if (lastHighlightRelatedSearchFor != '') {
					highlightRowsWithDataContentEqualTo(lastHighlightRelatedSearchFor);
				}
			}
			
			function highlightRowsWithDataContentEqualTo(searchFor) {
				j$('table.color_changing tr').each(function() {
					if (j$(this).children('td[data-content="' + searchFor + '"]').length > 0) {
						highlightRelatedRow(j$(this),searchFor);
					}
					else {
						clearHighlightedRelatedRow(j$(this));
					}
				});
			}

			function clearHighlightedRelatedRows() {
				j$('table.color_changing tr').each(function() {
					clearHighlightedRelatedRow(j$(this));
				});
			}

			function highlightRelatedRow(row,searchFor) {
				j$(row).addClass('relatedRowHighlight');
				j$(row).children('td[data-content="' + searchFor + '"]').addClass('relatedRowHighlightMatchingTD');
				
				j$(row).hover(function() {highlightRelatedRowAddHoverClass(j$(row));},
				              function() {highlightRelatedRowRemoveHoverClass(j$(row));}
				);
			}

			function clearHighlightedRelatedRow(row) {
				j$(row).removeClass('relatedRowHighlight');
 				j$(row).children('td').removeClass('relatedRowHighlightMatchingTD');
				j$(row).unbind('mouseenter mouseleave');
			}

			function highlightRelatedRowAddHoverClass(row) {
				j$(row).children('td').addClass('relatedRowHighlightTDHover');
			}
			
			function highlightRelatedRowRemoveHoverClass(row) {
				j$(row).children('td').removeClass('relatedRowHighlightTDHover');
			}



			/********************************
			 * Highlight Changed Row Methods
			 ********************************/

			var removeHighlightTimer;
	        
			function highlightRows() {
				var rowsToHightlight = j$("div.highlightedItem");
				j$(rowsToHightlight).parent().parent().addClass("trHighlightRow");
				removeHighlightTimer = setInterval(removeHighlightedRows,3000);    
			}

			function removeHighlightedRows() {
				clearInterval(removeHighlightTimer);
				var highlightedRows = j$("div.highlightedItem");
				j$(highlightedRows).parent().parent().removeClass("trHighlightRow");
			}


	        function moveTopJS(item,id) {showBlockUIMessage('Moving');moveTop(id);}
	        function moveUpJS(item,id) {showBlockUIMessage('Moving');moveUp(id);}
	        function moveDownJS(item,id) {showBlockUIMessage('Moving');moveDown(id);}
	        function moveBottomJS(item,id) {showBlockUIMessage('Moving');moveBottom(id);}
	        function moveJS(item,id,targetId) {
	        	if (targetId == '') {
	        		alert('A Move Target needs to be selected before clicking Move!');
	        	}
	        	else {
	        		showBlockUIMessage('Moving');
	        		moveSelected(id,targetId);
	        	}
	        }
	        function moveToUnassignedJS(item,id) {showBlockUIMessage('Moving...');moveToDeveloperSelected(id);}
	        
	        function findValforSelectRequestRow(requestId) {
	        	var valueToFind = 'moveList_' + requestId;
	        	var selectItem = j$("select[data-moveList='" + valueToFind + "']");
	        	var value = j$(selectItem).val(); 
	        	return value;
	        }
	        
	        function findValforStatusChangeRequestRow(requestId) {
	        	var valueToFind = 'statusList_' + requestId;
	        	var selectItem = j$("select[data-statusList='" + valueToFind + "']");
	        	var value = j$(selectItem).val(); 
	        	return value;
	        }

	        function findValforReleaseChangeRequestRow(requestId) {
	        	var valueToFind = 'releaseList_' + requestId;
	        	var selectItem = j$("select[data-releaseList='" + valueToFind + "']");
	        	var value = j$(selectItem).val(); 
	        	return value;
	        }

			/****************************************************/
			/* Slider Routines for Options Popout               */
			/* http://www.jqeasy.com/jquery-slide-panel-plugin/ */
			/****************************************************/
			
			function initializeSliderPopout() {
		        j$('#optionsSliderPanelMain').slidePanel({
					triggerName: '#optionsSliderTrigger',
					triggerTopPos: '0px',
					panelTopPos: '10px',
					panelOpacity: 1,
				    speed: 'fast',
					ajax: false,
					ajaxSource: null,
					clickOutsideToClose: true				
				});
	
				initHeight();	
				
				j$('#optionsSliderTrigger').click(function(){
					toggleHeight();
				});
			}			
			
			var sliderState = 'Closed';
	
			function initHeight() {
				sliderState='Closed';
			}
	
			function toggleHeight() {
				if (sliderState == 'Closed') {
					sliderState='Opened';
				}
				else if (sliderState == 'Opened') {
					sliderState='Closed';
				}
			}
	
			function hideOptions() {
				console.log('hideOptions Clicked!');
				j$('#optionsSliderTrigger').trigger("mousedown");
			}

	    </script>

	<style>
		.headerText {
			color: #000000;
			font-size: 3.5em;
			margin: 0;
			font-family: Arial, Helvetica, sans-serif;
			text-align: center;
			font-weight: bold;
			padding: 3px 5px 3px 5px;
		}
		
		.relatedRowHighlight {
			background-color: #84D56A !important;
			border-color: #CAF957 !important;

		}
		
		.relatedRowHighlightMatchingTD {
            background-color : #99EA7E !important;
			font-weight: bold;
		}
		
		.relatedRowHighlightTRHover {
            background-color : #CAF957 !important;
		}
		
		.relatedRowHighlightTDHover {
            background-color : #CAF957 !important;
		}
		
		.hideIt {
			visibility: hidden;
		}
		
		.hideMe {
			display: none;
		}
		
		.NameFormat {
			font-weight: bold;
		}
		
		.TextCenterAlign {
			text-align: center;
		}
		
		.trHighlightRow {
			background-color: #D8F3D4 !important;
		}
		
		.tableStyling {
			border: 1px solid #000000 !important;
		}
		
		.headerRow {
			background-color: #8CE6FD !important;
			color: #FFFFFF;
			font-size: 1.2em;
			margin: 0;
			font-family: Arial, Helvetica, sans-serif;
			border: 1px solid #000000 !important;
		}
		
		.oddRow {
			background-color: #FFFFFF;
			border: 1px solid #000000 !important;
		}
		
		.columnStyling {
			border: 1px solid #000000 !important;
		}
		
		.evenRow {
			background-color: #DDDDDD;
			border: 1px solid #000000 !important;
		}
		
		/**************************/
		/* CSS for Options Popout */
		/**************************/
		a.trigger {
			position: fixed !important;
			top: 120px !important;
			text-decoration: none;
			font-size: 14px;
			font-family: Arial, Helvetica, sans-serif;
			color: #1468B6;
		/*	padding: 7px 14px 6px 24px; */
			padding: 12px 20px 10px 6px; 
			z-index: 2;
			background-origin: content-box !important;
			background: #CFEEF8 url({!URLFOR($Resource.jQuery1x,'jQueryPlugins/jqEasySlidePanel/images/plus.png')}) 6% 55% no-repeat;
		}
		
		a.trigger.right {
			right: 0;
			border-bottom-left-radius: 5px;
			border-top-left-radius: 5px;
			-moz-border-radius-bottomleft: 5px;
			-moz-border-radius-topleft: 5px;
			-webkit-border-bottom-left-radius: 5px;
			-webkit-border-top-left-radius: 5px;
		}
		
		a.trigger:hover {
			background-color: #59B;
			text-decoration: none;
			color: #EEE;
		}
		
		a.active.trigger {
			color: #FFF;
			background: #1797C0 url({!URLFOR($Resource.jQuery1x,'jQueryPlugins/jqEasySlidePanel/images/minus.png')}) 6% 55% no-repeat;
		}
		.panel {
			color: #CCC;
			position: fixed !important;
			top: 131px !important;
		/*	right: 40px !important; */
			right: 10px !important;
			display: none;
			background: #CFE5EC;
			width: 650px;
			height: auto;
			z-index: 1;
		}
		
		.panel.right {
			right: 0;
			padding: 20px 20px 20px 30px; 
			border-top-left-radius: 15px;
			-moz-border-radius-topleft: 15px;
			-webkit-border-top-left-radius: 15px;
			border-bottom-left-radius: 15px;
			-moz-border-radius-bottomleft: 15px;
			-webkit-border-bottom-left-radius: 15px;
			border-bottom-right-radius: 15px;
			-moz-border-radius-bottomright: 15px;
			-webkit-border-bottom-right-radius: 15px;
		}
		
		.panel p {
			font-size: 11px;
		}
		
		.sliderOpenHeaderStyle {
			padding: 4px 0;
			vertical-align: middle;
			width: 100%;
			text-align: center;
			background-color: #1797C0;
			font-weight: bold;
			color: white;
			border-top-right-radius: 15px;
			border-bottom-right-radius: 15px;
			border-bottom-left-radius: 15px;
			border-top-left-radius: 15px;
		}
		
		.centered-cell {
			text-align: center;
		} 
		
		.highlightRelated {
		}
	</style>

	<apex:outputPanel id="mainPanel">
		<a href="#" id="optionsSliderTrigger" class="trigger right"> </a>

		<apex:form >
					<apex:outputPanel id="optionsSliderPanel" layout="block">
						<div id="optionsSliderPanelMain" class="panel right">
							<apex:outputPanel id="optionsSliderPanelContent" layout="block">
								<apex:outputPanel id="sliderPanelTitle" styleClass="sliderOpenHeaderStyle" layout="block">
									<apex:outputText value="Filter/Query Options" />
								</apex:outputPanel>

							    <apex:tabPanel switchType="client" selectedTab="developersTab" id="theTabPanel">
							        <apex:tab label="Developers" name="developersTab" id="developersTab">
										<div>
											<div>
											<apex:repeat value="{!byDevelopers}" var="byDeveloper">
												<!-- <div style="border: 1px solid black; background-color: orange; text-align: center; padding: 3px 5px 3px 5px;">  --> 
												<div style="padding: 3px 5px 3px 5px;"> 
													<apex:inputCheckbox value="{!byDeveloper.visible}">
														<apex:actionSupport event="onchange" action="{!doNothing}" rerender="requestTable,pageMessages,mainForm,optionsSliderPanelContent" status="optionsStatusDisplay"
														    onsubmit="showBlockUIMessage('Refreshing');" oncomplete="applyJQueryStyling();" />
													</apex:inputCheckbox> 
													<apex:commandLink action="{!showSelectedDev}" value="Show {!byDeveloper.devName}" rerender="requestTable,pageMessages,mainForm,optionsSliderPanelContent"
													    onclick="showBlockUIMessage('Refreshing');"
														status="optionsStatusDisplay" oncomplete="applyJQueryStyling();">
														<apex:param name="selectedDev" assignTo="{!selectedDevIdToShowParam}" value="{!byDeveloper.devUserId}" />
													</apex:commandLink>
												</div>
											</apex:repeat> 
											</div>
											<div>
											<apex:commandButton id="showAllDevsButton" action="{!showAllDevs}" value="Show All" rerender="requestTable,pageMessages,mainForm,optionsSliderPanelContent"
													    onclick="showBlockUIMessage('Refreshing');"
												status="optionsStatusDisplay" oncomplete="applyJQueryStyling();" />
											<apex:commandButton id="hideAllDevsButton" action="{!hideAllDevs}" value="Hide All" rerender="requestTable,pageMessages,mainForm,optionsSliderPanelContent"
													    onclick="showBlockUIMessage('Refreshing');"
												status="optionsStatusDisplay"  oncomplete="applyJQueryStyling();"/>
											</div>
										</div>
									</apex:tab> 
							        <apex:tab label="General Options" name="generalOptionsTab" id="generalOptionsTab">
										<div style="padding: 3px 5px 3px 5px;"> 
											<div style="padding: 3px 5px 3px 5px;">
												<apex:inputCheckbox value="{!includeBlockedRequests}">
													<apex:actionSupport event="onchange" action="{!includeBlockedRequestsParamChangeHandler}" rerender="requestTable,pageMessages,mainForm,optionsSliderPanelContent" status="optionsStatusDisplay" 
													    onsubmit="showBlockUIMessage('Refreshing');"
														oncomplete="applyJQueryStyling();">
													</apex:actionSupport>
												</apex:inputCheckbox> 
												<apex:outputText value="Include Requests that are Blocked"/>
											</div> 
											<div style="padding: 3px 5px 3px 5px;">
												<apex:inputCheckbox value="{!includeNonBlockedRequests}">
													<apex:actionSupport event="onchange" action="{!includeNonBlockedRequestsParamChangeHandler}" rerender="requestTable,pageMessages,mainForm,optionsSliderPanelContent" status="optionsStatusDisplay" 
													    onsubmit="showBlockUIMessage('Refreshing');"
														oncomplete="applyJQueryStyling();" />
												</apex:inputCheckbox> 
												<apex:outputText value="Include Requests that are not Blocked"/>
											</div>
										</div>
									</apex:tab>  
									
							        <apex:tab label="Column Options" name="columnOptionsTab" id="columnOptionsTab">
										<div>
											<div> 
											<apex:repeat value="{!queryColumns.columns}" var="byColumn"> 
												<div style="padding: 3px 5px 3px 5px;"> 
													<apex:inputCheckbox value="{!byColumn.visible}">
														<apex:actionSupport event="onchange" action="{!doNothing}" rerender="requestTable,pageMessages,mainForm,optionsSliderPanelContent" status="optionsStatusDisplay"
														    onsubmit="showBlockUIMessage('Refreshing');"
															oncomplete="applyJQueryStyling();" />
													</apex:inputCheckbox>
													<apex:outputText value="{!byColumn.label}"/> 
												</div>
											</apex:repeat> 
											</div>
										</div>
									</apex:tab> 
									
							        <apex:tab label="Status Filters" name="statusFiltering" id="statusFiltering">
										<div>
										
											<table>
												<tr>
													<td>
														<div style="padding: 3px 5px 3px 5px;">
													        <apex:selectList value="{!selectedStatuses}" title="Choose Statuses" multiSelect="true" style="max-height:300px;max-width:500px;">
													            <apex:selectOptions value="{!availableStatuses}"/>
													        </apex:selectList><br/>
			
														</div>
													</td>
													<td>
														<div>
															<apex:commandButton id="applyStatusesSelectAllButton" action="{!newStatusesFilterSelectAll}" value="Select All"
															    onclick="showBlockUIMessage('Refreshing');"
																rerender="optionsSliderPanelContent" status="optionsStatusDisplay" oncomplete="applyJQueryStyling();"/>
														</div>
														<div> 
															<apex:commandButton id="applyStatusesSelectNoneButton" action="{!newStatusesFilterSelectNone}" value="Select None"
															    onclick="showBlockUIMessage('Refreshing');"
																rerender="optionsSliderPanelContent" status="optionsStatusDisplay" oncomplete="applyJQueryStyling();" /> 
														</div>
													</td>
												</tr>
												<tr>
													<td>
														<apex:commandButton id="applyStatusesButton" action="{!applyNewStatusesFilter}" value="Apply"
														    onclick="showBlockUIMessage('Refreshing');"
															rerender="requestTable,pageMessages,mainForm,optionsSliderPanelContent" status="optionsStatusDisplay" oncomplete="applyJQueryStyling();" /> 
															
														<apex:commandButton id="applyStatusesAndCloseButton" action="{!applyNewStatusesFilter}" value="Apply & Close"
															rerender="requestTable,pageMessages,mainForm,optionsSliderPanelContent" status="statusDisplay" 
															onclick="showBlockUIMessage('Refreshing');hideOptions();" 
															onComplete="applyJQueryStyling();"/> 
															
														<apex:commandButton id="resetStatusesButton" action="{!resetStatusesFilterToInitialValues}" value="Restore Defaults"
															rerender="requestTable,pageMessages,mainForm,optionsSliderPanelContent" status="optionsStatusDisplay" 
														    onclick="showBlockUIMessage('Refreshing');"
															oncomplete="applyJQueryStyling();"/>
													</td>
													<td>
														&nbsp;
													</td>
												</tr>
											</table>
										</div>
							        </apex:tab>
							        
							        <apex:tab label="Project Filters" name="projectFiltering" id="projectFiltering"> 
										<div>
											<table>
												<tr>
													<td>
														<div style="padding: 3px 5px 3px 5px;">
													        <apex:selectList value="{!selectedProjectIds}" title="Choose Projects" multiSelect="true" style="max-height:300px;max-width:500px;">
													            <apex:selectOptions value="{!availableProjects}"/>
													        </apex:selectList><br/>
														</div>
														<div style="padding: 3px 5px 3px 5px;"> 
															<apex:inputCheckbox value="{!includeClosedProjects}">
																<apex:actionSupport event="onchange" action="{!doNothing}" rerender="requestTable,pageMessages,mainForm,optionsSliderPanelContent" status="optionsStatusDisplay" 
																    onsubmit="showBlockUIMessage('Refreshing');"
																	oncomplete="applyJQueryStyling();" />
															</apex:inputCheckbox> 
															<apex:outputText value="Include Closed Projects"/>
														</div>
													</td>
													<td>
														<apex:commandButton id="applyProjectIdsSelectAllButton" action="{!newProjectIdsFilterSelectAll}" value="Select All"
														    onclick="showBlockUIMessage('Refreshing');"
															rerender="optionsSliderPanelContent" status="optionsStatusDisplay" oncomplete="applyJQueryStyling();"/>
														<apex:commandButton id="applyProjectIdsSelectNoneButton" action="{!newProjectIdsFilterSelectNone}" value="Select None"
														    onclick="showBlockUIMessage('Refreshing');"
															rerender="optionsSliderPanelContent" status="optionsStatusDisplay" oncomplete="applyJQueryStyling();" /> 
													</td>
													<td>
														<div style="padding: 3px 5px 3px 5px;"> 
															<apex:inputCheckbox value="{!includeRequestsWithNoProject}">
																<apex:actionSupport event="onchange" action="{!applyNewProjectsFilter}" rerender="requestTable,pageMessages,mainForm,optionsSliderPanelContent" status="optionsStatusDisplay" 
																    onsubmit="showBlockUIMessage('Refreshing');"
																	oncomplete="applyJQueryStyling();" />
															</apex:inputCheckbox> 
															<apex:outputText value="Include Requests with No Project"/>
														</div>
													</td>
												</tr>
												<tr>
													<td>
														<apex:commandButton id="applyProjectsButton" action="{!applyNewProjectsFilter}" value="Apply"
														    onclick="showBlockUIMessage('Refreshing');"
															rerender="requestTable,pageMessages,mainForm,optionsSliderPanelContent" status="optionsStatusDisplay" oncomplete="applyJQueryStyling();" /> 
															
														<apex:commandButton id="applyProjectsAndCloseButton" action="{!applyNewProjectsFilter}" value="Apply & Close"
															rerender="requestTable,pageMessages,mainForm,optionsSliderPanelContent" status="statusDisplay"
															onClick="showBlockUIMessage('Refreshing');hideOptions();" onComplete="applyJQueryStyling();"/> 
															
														<apex:commandButton id="resetProjectsButton" action="{!resetProjectsFilterToInitialValues}" value="Restore Defaults"
														    onclick="showBlockUIMessage('Refreshing');"
															rerender="requestTable,pageMessages,mainForm,optionsSliderPanelContent" status="optionsStatusDisplay" oncomplete="applyJQueryStyling();" />
													</td>
													<td>
														&nbsp;
													</td>
													<td>
														&nbsp;
													</td>
												</tr>
											</table>
										</div>
							        </apex:tab>
							        
							        <apex:tab label="Release Filters" name="releaseFiltering" id="releaseFiltering">
										<div>
											<table>
												<tr>
													<td>
														<div style="padding: 3px 5px 3px 5px;">
													        <apex:selectList value="{!selectedReleaseIds}" title="Choose Releases" multiSelect="true" style="max-height:300px;max-width:500px;">
													            <apex:selectOptions value="{!availableReleases}"/>
													        </apex:selectList><br/>
														</div>
														<div style="padding: 3px 5px 3px 5px;"> 
															<apex:inputCheckbox value="{!includeClosedReleases}">
																<apex:actionSupport event="onchange" action="{!doNothing}" rerender="requestTable,pageMessages,mainForm,optionsSliderPanelContent" status="optionsStatusDisplay" 
																    onsubmit="showBlockUIMessage('Refreshing');"
																	oncomplete="applyJQueryStyling();"/>
															</apex:inputCheckbox> 
															<apex:outputText value="Include Closed Releases"/>
														</div>
													</td>
													<td>
														<apex:commandButton id="applyReleaseIdsSelectAllButton" action="{!newReleaseIdsFilterSelectAll}" value="Select All"
														    onclick="showBlockUIMessage('Refreshing');"
															rerender="optionsSliderPanelContent" status="optionsStatusDisplay" oncomplete="applyJQueryStyling();" /> 
														<apex:commandButton id="applyReleaseIdsSelectNoneButton" action="{!newReleaseIdsFilterSelectNone}" value="Select None"
														    onclick="showBlockUIMessage('Refreshing');"
															rerender="optionsSliderPanelContent" status="optionsStatusDisplay" oncomplete="applyJQueryStyling();"/> 
													</td>
													<td>
														<div style="padding: 3px 5px 3px 5px;"> 
															<apex:inputCheckbox value="{!includeRequestsWithNoRelease}">
																<apex:actionSupport event="onchange" action="{!applyNewReleasesFilter}" rerender="requestTable,pageMessages,mainForm,optionsSliderPanelContent" status="optionsStatusDisplay" 
																    onsubmit="showBlockUIMessage('Refreshing');"
																	oncomplete="applyJQueryStyling();"/>
															</apex:inputCheckbox> 
															<apex:outputText value="Include Requests with No Release"/>
														</div>
													</td>
												</tr>
												<tr>
													<td>
														<apex:commandButton id="applyReleasesButton" action="{!applyNewReleasesFilter}" value="Apply"
															rerender="requestTable,pageMessages,mainForm,optionsSliderPanelContent" status="optionsStatusDisplay" 
														    onclick="showBlockUIMessage('Refreshing');"
															oncomplete="applyJQueryStyling();"/> 
															
														<apex:commandButton id="applyReleasesAndCloseButton" action="{!applyNewReleasesFilter}" value="Apply & Close"
															rerender="requestTable,pageMessages,mainForm,optionsSliderPanelContent" status="statusDisplay" 
															onClick="showBlockUIMessage('Refreshing');hideOptions();" onComplete="applyJQueryStyling();"/> 
															
														<apex:commandButton id="resetReleasesButton" action="{!resetReleasesFilterToInitialValues}" value="Restore Defaults"
														    onclick="showBlockUIMessage('Refreshing');"
															rerender="requestTable,pageMessages,mainForm,optionsSliderPanelContent" status="optionsStatusDisplay" oncomplete="applyJQueryStyling();"/>
													</td>
													<td>
														&nbsp;
													</td>
													<td>
														&nbsp;
													</td>
												</tr>
											</table>
										</div>
							        </apex:tab>
							        
							        <apex:tab label="Admin" name="adminTab" id="adminTab">
										<div>
											<table>
												<tr>
													<td>
														<div style="padding: 3px 5px 3px 5px;"> 
															<apex:inputCheckbox value="{!showDeveloperPriorityValue}">
																<apex:actionSupport event="onchange" action="{!doNothing}" rerender="requestTable,pageMessages,mainForm,optionsSliderPanelContent" status="optionsStatusDisplay" 
																    onsubmit="showBlockUIMessage('Refreshing');"
																	oncomplete="applyJQueryStyling();"/>
															</apex:inputCheckbox> 
															<apex:outputText value="Show Developer Priority Column"/>
														</div>
													</td>
													<td>
														<div>
															<apex:outputText value="Query Rows : "/>
															<apex:outputText value="{!requestRecCount}"/>
														</div>
													</td>
												</tr>
												<tr>
													<td>
														<apex:commandButton id="cleanDevPrioritiesButton" action="{!cleanDeveloperPriorities}" value="Clean Developer Priorities"
															rerender="requestTable,pageMessages,mainForm,optionsSliderPanelContent" status="optionsStatusDisplay"  
														    onclick="showBlockUIMessage('Refreshing');"
															oncomplete="applyJQueryStyling();" />
													</td>
													<td>
														<apex:outputText value="Max Rows : "/>
														<apex:outputText value="{!maxRowsParam}"/>
													</td>
												</tr>
											</table>
										</div>
							        </apex:tab>
							    </apex:tabPanel>
							    <apex:actionStatus id="optionsStatusDisplay">
									<apex:facet name="start">
									<!-- 
										<apex:outputText escape="false" value="">
											<apex:outputText value="Please wait ... " styleClass="headerText" />
											<apex:image value="{!$Resource.spinner}" height="40px" width="40px" />
										</apex:outputText>
 									-->										
									</apex:facet>
									<apex:facet name="stop">
									</apex:facet>
								</apex:actionStatus>
								<center>
									<input type="button" value="Close" class="btn" onclick="hideOptions();" />
								</center>
							</apex:outputPanel>
						</div>
					</apex:outputPanel>


			<apex:pageMessages id="pageMessages" />

			<apex:actionRegion >
				<apex:outputPanel id="mainForm" layout="block">

					<apex:actionFunction name="moveTop" action="{!moveTop}" status="statusDisplay" rerender="requestTable,pageMessages" oncomplete="applyJQueryStyling();">
						<apex:param name="requestIdToMove" assignTo="{!requestIdToMoveParam}" value="" />
					</apex:actionFunction>
	
					<apex:actionFunction name="moveUp" action="{!moveUp}" status="statusDisplay" rerender="requestTable,pageMessages" oncomplete="applyJQueryStyling();">
						<apex:param name="requestIdToMove" assignTo="{!requestIdToMoveParam}" value="" />
					</apex:actionFunction>
	
					<apex:actionFunction name="moveDown" action="{!moveDown}" status="statusDisplay" rerender="requestTable,pageMessages" oncomplete="applyJQueryStyling();">
						<apex:param name="requestIdToMove" assignTo="{!requestIdToMoveParam}" value="" />
					</apex:actionFunction>
	
					<apex:actionFunction name="moveBottom" action="{!moveBottom}" status="statusDisplay" rerender="requestTable,pageMessages" oncomplete="applyJQueryStyling();">
						<apex:param name="requestIdToMove" assignTo="{!requestIdToMoveParam}" value="" />
					</apex:actionFunction>
	
					<apex:actionFunction name="moveSelected" action="{!handleMoveSelected}" status="statusDisplay" rerender="requestTable,pageMessages,mainForm"
						oncomplete="applyJQueryStyling();">
						<apex:param name="requestIdToMove" assignTo="{!requestIdToMoveParam}" value="" />
						<apex:param name="moveSelection" assignTo="{!moveSelectionParam}" value="" />
					</apex:actionFunction>
	
					<apex:actionFunction name="saveNewStatus" action="{!saveNewStatus}" status="statusDisplay" rerender="requestTable,pageMessages,mainForm"
						oncomplete="applyJQueryStyling();">
						<apex:param name="requestIdToSave" assignTo="{!requestIdToSaveParam}" value="" />
						<apex:param name="newStatus" assignTo="{!newStatusParam}" value="" />
					</apex:actionFunction>
	
					<apex:actionFunction name="saveNewRelease" action="{!saveNewRelease}" status="statusDisplay" rerender="requestTable,pageMessages,mainForm"
						oncomplete="applyJQueryStyling();">
						<apex:param name="requestIdToSave" assignTo="{!requestIdToSaveParam}" value="" />
						<apex:param name="newRelease" assignTo="{!newReleaseParam}" value="" />
					</apex:actionFunction>
	
					<apex:outputpanel id="showUnassignedCheckboxPanel">
						<div>
							<apex:outputText styleClass="headerText" value="{!titleParam}" />
							<apex:actionStatus id="statusDisplay">
								<apex:facet name="start">
									<!-- 
									<apex:outputText escape="false" value="">
										<apex:outputText value="- Please wait ... " styleClass="headerText" />
										<apex:image value="{!$Resource.spinner}" height="40px" width="40px" />
									</apex:outputText>
									 -->
								</apex:facet>
								<apex:facet name="stop">
								</apex:facet>
							</apex:actionStatus>
						</div>
						<div>
							<CENTER>
								<apex:commandButton id="toggleEditModeButton" action="{!toggleEditMode}" value="{!IF(inEditMode,'View','Edit')}"
								 	rendered="{!editModeAvailableParam}" rerender="requestTable,pageMessages,mainForm,optionsSliderPanelContent" status="statusDisplay"  
								    onclick="showBlockUIMessage('Switching Mode');"
								 	oncomplete="applyJQueryStyling();"/>
								<apex:commandButton id="refreshButton" action="{!doNothing}" value="Refresh" rerender="requestTable,pageMessages,mainForm,optionsSliderPanelContent" status="statusDisplay" 
								    onclick="showBlockUIMessage('Refreshing');"
									oncomplete="applyJQueryStyling();"/>
							</CENTER>							
						</div>
					</apex:outputpanel>
	
					<apex:repeat value="{!byDevelopers}" var="byDeveloper">
						<apex:pageBlock id="requestTable" title="Requests for {!byDeveloper.devName}" rendered="{!byDeveloper.visible}">
							<apex:pageBlockTable value="{!byDeveloper.requests}" var="item" border="1" styleClass="tableStyling color_changing" headerClass="headerRow" columnClasses="columnStyling"
								rowClasses="oddRow,evenRow">
								<apex:column headerValue="Developer Priority Actions" headerClass="actionColumnHeader hideWhenEditing TextCenterAlign" style="width: 1%;white-space: nowrap;"
									rendered="{!prioritiesEditable}">
									<apex:outputPanel layout="block" styleClass="actionLinks TextCenterAlign hideWhenEditing">
										<apex:outputPanel layout="block">
											<apex:image id="moveTopImage" Title="Move to Top" value="{!URLFOR($Resource.DeveloperPriorityResources,'images/2038-arrow_top_blue.png')}"
												height="24px" width="24px" onclick="moveTopJS(j$(this),'{!item.rec.Id}');" />
	
											<apex:image id="moveUpImage" Title="Move Up" value="{!URLFOR($Resource.DeveloperPriorityResources,'images/2038-arrow_up_blue.png')}" height="24px"
												width="24px" onclick="moveUpJS(j$(this),'{!item.rec.Id}');" />
	
											<apex:image id="moveDownImage" Title="Move Down" value="{!URLFOR($Resource.DeveloperPriorityResources,'images/2040-arrow_down_blue.png')}"
												height="24px" width="24px" onclick="moveDownJS(j$(this),'{!item.rec.Id}');" />
	
											<apex:image id="moveBottomImage" Title="Move To Bottom" value="{!URLFOR($Resource.DeveloperPriorityResources,'images/2040-arrow_bottom_blue.png')}"
												height="24px" width="24px" onclick="moveBottomJS(j$(this),'{!item.rec.Id}');" />
											<apex:selectList id="moveList" html-data-moveList="moveList_{!item.rec.Id}" value="{!moveSelectionParam}" size="1" title="Move">
												<apex:selectOptions value="{!byDeveloper.moveOptions}" />
											</apex:selectList>
	
											<input type="button" value="Move" class="btn" onclick="moveJS(j$(this),'{!item.rec.Id}',findValforSelectRequestRow('{!item.rec.Id}'));" />
										</apex:outputPanel>
	
										<apex:image id="loadingImage" styleClass="hideMe" value="{!URLFOR($Resource.AccountRollupResources, 'images/spin_24x24_loading.gif')}" width="24"
											height="24" />
									</apex:outputPanel>
								</apex:column>
								<apex:column value="{!item.rec.Developer_Priority__c}" rendered="{!showDeveloperPriorityValue}" styleClass="TextCenterAlign" headerClass="TextCenterAlign"/>
								<apex:column headerValue="Request Number" styleClass="TextCenterAlign" headerClass="TextCenterAlign" rendered="{!isRequestNumberVisible}">
									<apex:outputPanel layout="block" styleClass="nonEdit itemName {!IF(item.rec.Id == '','newItem','')}" html-data-name="{!item.rec.Request_Number__c}"
										html-data-id="{!item.rec.Id}">
										<apex:outputLink value="/{!item.rec.Id}" target="_blank" styleClass="NameFormat">{!item.rec.Request_Number__c}</apex:outputLink>
									</apex:outputPanel>
								</apex:column>
								<apex:column headerValue="Request Name" style="min-width:300px;" headerClass="TextCenterAlign" rendered="{!isRequestNameVisible}">
									<apex:outputPanel layout="block"
										styleClass="nonEdit itemName {!IF(item.rec.Id == '','newItem','')} {!IF(item.rec.Id == requestIdToHighlightParam,'highlightedItem','')}"
										html-data-name="{!item.rec.Name}" html-data-id="{!item.rec.Id}">
										<apex:outputLink value="/{!item.rec.Id}" target="_blank" styleClass="NameFormat">{!item.rec.Name}</apex:outputLink>
									</apex:outputPanel>
								</apex:column>
	
								<apex:column headerValue="Status" value="{!item.rec.Status_Formatted__c}" rendered="{!NOT(statusEditable) && isStatusVisible}" style="min-width:220px;" styleClass="highlightRelatedEnabled" html-data-content="{!item.rec.Status__c}" headerClass="TextCenterAlign"/>
								<apex:column headerValue="Status" rendered="{!statusEditable && isStatusVisible}" headerClass="actionColumnHeader TextCenterAlign" style="width: 1%;white-space: nowrap;">
									<apex:outputPanel layout="block">
										<apex:selectList id="statusList" html-data-statusList="statusList_{!item.rec.Id}" value="{!item.rec.Status__c}" size="1" title="Available Statuses"
											onchange="showBlockUIMessage('Saving Status Change');saveNewStatus('{!item.rec.Id}',findValforStatusChangeRequestRow('{!item.rec.Id}'));"
											>
											<apex:selectOptions value="{!availableStatuses}" />
										</apex:selectList>
									</apex:outputPanel>
								</apex:column>

								<apex:column value="{!item.rec.Blocked__c}" rendered="{!includeBlockedRequests && isBlockedVisible}" styleClass="TextCenterAlign" headerClass="TextCenterAlign"/>
								<apex:column value="{!item.rec.Reason_Delayed__c}" rendered="{!includeBlockedRequests && isReasonDelayedVisible}" styleClass="TextCenterAlign" headerClass="TextCenterAlign"/>
								<apex:column value="{!item.rec.Date_Blocked__c}" rendered="{!includeBlockedRequests && isDateBlockedVisible}" styleClass="TextCenterAlign" headerClass="TextCenterAlign"/>
								 
								<apex:column value="{!item.rec.Estimated_Effort__c}" styleClass="TextCenterAlign" headerClass="TextCenterAlign" rendered="{!isEstimatedEffortVisible}" />
								<apex:column value="{!item.rec.Priority__c}" styleClass="TextCenterAlign" headerClass="TextCenterAlign" rendered="{!isPriorityVisible}" />
								<apex:column value="{!item.rec.Need_By_Date__c}" styleClass="TextCenterAlign" headerClass="TextCenterAlign" rendered="{!isNeedByDateVisible}" />
								
								<apex:column headerValue="Project Name" style="min-width:150px;" headerClass="TextCenterAlign" styleClass="highlightRelatedEnabled" rendered="{!isProjectVisible}" html-data-content="{!item.rec.Project__c}">
									<apex:outputPanel layout="block" styleClass="nonEdit" html-data-name="{!item.rec.Project__r.Name}" html-data-id="{!item.rec.Project__c}">
										<apex:outputLink value="/{!item.rec.Project__c}" target="_blank">{!item.rec.Project__r.Name}</apex:outputLink>
									</apex:outputPanel>
								</apex:column>
								<apex:column headerValue="Release Name" style="min-width:150px;" headerClass="TextCenterAlign" styleClass="highlightRelatedEnabled" rendered="{!isReleaseVisible}" html-data-content="{!item.rec.Release__c}" >
									<apex:outputPanel layout="block" styleClass="nonEdit" html-data-name="{!item.rec.Release__r.Name}" html-data-id="{!item.rec.Release__c}">
										<apex:outputLink value="/{!item.rec.Release__c}" target="_blank">{!item.rec.Release__r.Name}</apex:outputLink>
									</apex:outputPanel>
								</apex:column>
								<apex:column headerValue="Change Release" rendered="{!releaseEditable && isReleaseVisible}" headerClass="actionColumnHeader TextCenterAlign" style="width: 1%;white-space: nowrap;">
									<apex:outputPanel layout="block" rendered="{!allowReleaseChangeParam}">
										<apex:selectList id="releaseList" html-data-releaseList="releaseList_{!item.rec.Id}" size="1" title="Open Releases">
											<apex:selectOptions value="{!openReleases}" />
										</apex:selectList>
										<input type="button" value="Update" class="btn" onclick="showBlockUIMessage('Saving Release Change');saveNewRelease('{!item.rec.Id}',findValforReleaseChangeRequestRow('{!item.rec.Id}'));"
										/>
									</apex:outputPanel>
								</apex:column>
	
							</apex:pageBlockTable>
						</apex:pageBlock>
					</apex:repeat>
				</apex:outputPanel>
			</apex:actionRegion>
		</apex:form>
	</apex:outputPanel>
</apex:component>